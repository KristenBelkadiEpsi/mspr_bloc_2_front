name: Release Rust Binaries

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-release:
    name: Build and Release Binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact: myapp-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: myapp-macos-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: myapp-windows-x86_64.exe

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install OpenSSL (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install openssl@3
          echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
      - name: Build release binary
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_SYSROOT_DIR: /
          OPENSSL_STATIC: 1
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          mkdir dist
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/*.exe dist/${{ matrix.artifact }}
            7z a ${{ matrix.artifact }}.zip dist/${{ matrix.artifact }}
          else
            cp target/${{ matrix.target }}/release/* dist/${{ matrix.artifact }}
            tar -czvf ${{ matrix.artifact }}.tar.gz -C dist ${{ matrix.artifact }}
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ matrix.artifact }}.zip
            ${{ matrix.artifact }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
