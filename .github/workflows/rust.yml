on:
  push:
    branches: ["master"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["master"]
env:
  CARGO_TERM_COLOR: always
  APP_NAME: mspr_bloc2_front

jobs:
  build:
    name: Build & Test on ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install Linux dependencies (for Iced)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libgl1-mesa-dev libasound2-dev libfontconfig1-dev pkg-config

      - name: Build application
        run: cargo build --verbose --release

      - name: Run tests
        run: cargo test --verbose

      - name: Upload artifact (Linux & macOS)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ runner.os }}
          path: target/release/${{ env.APP_NAME }}

      - name: Upload artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ runner.os }}
          path: target/release/${{ env.APP_NAME }}.exe
      # - name: Check formatting
      #   run: cargo fmt -- --check

      # - name: Run Clippy
      #   run: cargo clippy -- -D warnings
  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          files: |
            artifacts/**/*
